{"version":3,"sources":["js/worker.js"],"names":["computeTotal","x","Promise","resolve","sum","n","eachnum","arr","length","res","self","addEventListener","evt","startTime","Date","now","data","postMessage","type","message","time"],"mappings":"AAAA,MAAMA,YAAY,GAAIC,CAAC,IACrB,IAAIC,OAAO,CAAEC,OAAO,IAAK;EACvB,IAAIC,GAAG,GAAG,CAAC;EACX,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIJ,CAAC,EAAEI,CAAC,EAAE,EAAE;IAC3BD,GAAG,IAAIC,CAAC;EACV;EAEAF,OAAO,CAACC,GAAG,CAAC;AACd,CAAC,CAAC;AAEJ,MAAME,OAAO,GAAG,gBAAAA,CAAiBC,GAAG,EAAE;EACpC,IAAIF,CAAC,GAAG,CAAC;EACT,OAAOA,CAAC,GAAGE,GAAG,CAACC,MAAM,EAAE;IACrB,IAAIC,GAAG,GAAG,MAAMT,YAAY,CAACO,GAAG,CAACF,CAAC,CAAC,CAAC;IACpC,MAAMI,GAAG;IACTJ,CAAC,EAAE;EACL;AACF,CAAC;AAEDK,IAAI,CAACC,gBAAgB,CAAC,SAAS,EAAE,gBAAgBC,GAAG,EAAE;EACpD,IAAIC,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;EAC1B,WAAW,IAAIN,GAAG,IAAIH,OAAO,CAACM,GAAG,CAACI,IAAI,CAAC,EAAE;IACvCN,IAAI,CAACO,WAAW,CAAC;MACfC,IAAI,EAAE,MAAM;MACZC,OAAO,EAAE;QACPV,GAAG;QACHW,IAAI,EAAEN,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGF;MACrB;IACF,CAAC,CAAC;IAEFA,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;EACxB;EAEAL,IAAI,CAACO,WAAW,CAAC;IAAEC,IAAI,EAAE;EAAO,CAAC,CAAC;AACpC,CAAC,CAAC","file":"worker.68b749f9.js","sourceRoot":"..\\src","sourcesContent":["const computeTotal = (x) =>\r\n  new Promise((resolve) => {\r\n    let sum = 0;\r\n    for (let n = 0; n <= x; n++) {\r\n      sum += n;\r\n    }\r\n\r\n    resolve(sum);\r\n  });\r\n\r\nconst eachnum = async function* (arr) {\r\n  let n = 0;\r\n  while (n < arr.length) {\r\n    let res = await computeTotal(arr[n]);\r\n    yield res;\r\n    n++;\r\n  }\r\n};\r\n\r\nself.addEventListener(\"message\", async function (evt) {\r\n  let startTime = Date.now();\r\n  for await (let res of eachnum(evt.data)) {\r\n    self.postMessage({\r\n      type: \"data\",\r\n      message: {\r\n        res,\r\n        time: Date.now() - startTime,\r\n      },\r\n    });\r\n\r\n    startTime = Date.now();\r\n  }\r\n\r\n  self.postMessage({ type: \"exit\" });\r\n});\r\n"]}