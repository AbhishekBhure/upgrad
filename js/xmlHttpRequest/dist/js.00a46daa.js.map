{"version":3,"sources":["js/index.js"],"names":["container","document","querySelector","total","loadCartBtn","Row","product","price","render","arr","elems","map","e","totalCost","reduce","prev","curr","Number","innerHTML","join","getData","uri","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","JSON","parse","response","open","send","products","error","alert"],"mappings":"AAAA;AACA,MAAMA,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;AACjD,MAAMC,KAAK,GAAGF,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;AAC9C,MAAME,WAAW,GAAGH,QAAQ,CAACC,aAAa,CAAC,gBAAgB,CAAC;AAE5D,MAAMG,GAAG,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAM,CAAC,KAC5B;AACH,8BAA8BD,OAAQ;AACtC,+BAA+BC,KAAM;AACrC,SAAS;AAET,MAAMC,MAAM,GAAG,SAAAA,CAAUC,GAAG,EAAE;EAC5B,MAAMC,KAAK,GAAGD,GAAG,CAACE,GAAG,CAAEC,CAAC,IAAKP,GAAG,CAACO,CAAC,CAAC,CAAC;EACpC,MAAMC,SAAS,GAAGJ,GAAG,CAACK,MAAM,CAAC,CAACC,IAAI,EAAEC,IAAI,KAAKD,IAAI,GAAGE,MAAM,CAACD,IAAI,CAACT,KAAK,CAAC,EAAE,CAAC,CAAC;EAE1EP,SAAS,CAACkB,SAAS,GAAGR,KAAK,CAACS,IAAI,CAAC,EAAE,CAAC;EACpChB,KAAK,CAACe,SAAS,GAAGb,GAAG,CAAC;IAAEC,OAAO,EAAE,OAAO;IAAEC,KAAK,EAAEM;EAAU,CAAC,CAAC;AAC/D,CAAC;AAED,MAAMO,OAAO,GAAIC,GAAG,IAClB,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;EAC/B,MAAMC,GAAG,GAAG,IAAIC,cAAc,CAAC,CAAC;EAChCD,GAAG,CAACE,gBAAgB,CAAC,MAAM,EAAE,YAAY;IACvCJ,OAAO,CAACK,IAAI,CAACC,KAAK,CAAC,IAAI,CAACC,QAAQ,CAAC,CAAC;EACpC,CAAC,CAAC;EACFL,GAAG,CAACE,gBAAgB,CAAC,OAAO,EAAE,MAAMH,MAAM,CAAC,CAAC,CAAC;EAC7CC,GAAG,CAACM,IAAI,CAAC,KAAK,EAAEV,GAAG,CAAC;EACpBI,GAAG,CAACO,IAAI,CAAC,CAAC;AACZ,CAAC,CAAC;AAEJ5B,WAAW,CAACuB,gBAAgB,CAAC,OAAO,EAAE,YAAY;EAChD;EACA;;EAEA,IAAI;IACF,MAAMM,QAAQ,GAAG,MAAMb,OAAO,CAAC,2BAA2B,CAAC;IAC3DZ,MAAM,CAACyB,QAAQ,CAAC;EAClB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,KAAK,CAAE,8BAA6BD,KAAM,EAAC,CAAC;EAC9C;AACF,CAAC,CAAC","file":"js.00a46daa.js","sourceRoot":"..\\src","sourcesContent":["// Write your code here...\nconst container = document.querySelector(\".list\");\nconst total = document.querySelector(\".total\");\nconst loadCartBtn = document.querySelector(\"#load-cart-btn\");\n\nconst Row = ({ product, price }) =>\n  `<div class=\"product\">\n    <span class=\"prod-name\">${product}</span>\n    <span class=\"prod-cost\">$${price}</span>\n  </div>`;\n\nconst render = function (arr) {\n  const elems = arr.map((e) => Row(e));\n  const totalCost = arr.reduce((prev, curr) => prev + Number(curr.price), 0);\n\n  container.innerHTML = elems.join(\"\");\n  total.innerHTML = Row({ product: \"TOTAL\", price: totalCost });\n};\n\nconst getData = (uri) =>\n  new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n    xhr.addEventListener(\"load\", function () {\n      resolve(JSON.parse(this.response));\n    });\n    xhr.addEventListener(\"error\", () => reject());\n    xhr.open(\"GET\", uri);\n    xhr.send();\n  });\n\nloadCartBtn.addEventListener(\"click\", async () => {\n  //get data from api\n  //render list\n\n  try {\n    const products = await getData(\"//localhost:3000/products\");\n    render(products);\n  } catch (error) {\n    alert(`Error while fetching data: ${error}`);\n  }\n});\n"]}